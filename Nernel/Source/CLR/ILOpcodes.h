#pragma once


typedef enum ILOpcodes
{
	ILOpcodes_Nop				= 0x00,
	ILOpcodes_Break				= 0x01,
	ILOpcodes_LdArg_0			= 0x02,
	ILOpcodes_LdArg_1			= 0x03,
	ILOpcodes_LdArg_2			= 0x04,
	ILOpcodes_LdArg_3			= 0x05,
	ILOpcodes_LdLoc_0			= 0x06,
	ILOpcodes_LdLoc_1			= 0x07,
	ILOpcodes_LdLoc_2			= 0x08,
	ILOpcodes_LdLoc_3			= 0x09,
	ILOpcodes_StLoc_0			= 0x0A,
	ILOpcodes_StLoc_1			= 0x0B,
	ILOpcodes_StLoc_2			= 0x0C,
	ILOpcodes_StLoc_3			= 0x0D,
	ILOpcodes_LdArg_S			= 0x0E,
	ILOpcodes_LdArgA_S			= 0x0F,
	ILOpcodes_StArg_S			= 0x10,
	ILOpcodes_LdLoc_S			= 0x11,
	ILOpcodes_LdLocA_S			= 0x12,
	ILOpcodes_StLoc_S			= 0x13,
	ILOpcodes_LdNull			= 0x14,
	ILOpcodes_Ldc_I4_M1			= 0x15,
	ILOpcodes_Ldc_I4_0			= 0x16,
	ILOpcodes_Ldc_I4_1			= 0x17,
	ILOpcodes_Ldc_I4_2			= 0x18,
	ILOpcodes_Ldc_I4_3			= 0x19,
	ILOpcodes_Ldc_I4_4			= 0x1A,
	ILOpcodes_Ldc_I4_5			= 0x1B,
	ILOpcodes_Ldc_I4_6			= 0x1C,
	ILOpcodes_Ldc_I4_7			= 0x1D,
	ILOpcodes_Ldc_I4_8			= 0x1E,
	ILOpcodes_Ldc_I4_S			= 0x1F,
	ILOpcodes_Ldc_I4			= 0x20,
	ILOpcodes_Ldc_I8			= 0x21,
	ILOpcodes_Ldc_R4			= 0x22,
	ILOpcodes_Ldc_R8			= 0x23,
	// N/A						= 0x24,
	ILOpcodes_Dup				= 0x25,
	ILOpcodes_Pop				= 0x26,
	ILOpcodes_Jmp				= 0x27,
	ILOpcodes_Call				= 0x28,
	ILOpcodes_CallI				= 0x29,
	ILOpcodes_Ret				= 0x2A,
	ILOpcodes_Br_S				= 0x2B,
	ILOpcodes_BrFalse_S			= 0x2C,
	ILOpcodes_BrTrue_S			= 0x2D,
	ILOpcodes_Beq_S				= 0x2E,
	ILOpcodes_Bge_S				= 0x2F,
	ILOpcodes_Bgt_S				= 0x30,
	ILOpcodes_Ble_S				= 0x31,
	ILOpcodes_Blt_S				= 0x32,
	ILOpcodes_Bne_Un_S			= 0x33,
	ILOpcodes_Bge_Un_S			= 0x34,
	ILOpcodes_Bgt_Un_S			= 0x35,
	ILOpcodes_Ble_Un_S			= 0x36,
	ILOpcodes_Blt_Un_S			= 0x37,
	ILOpcodes_Br				= 0x38,
	ILOpcodes_BrFalse			= 0x39,
	ILOpcodes_BrTrue			= 0x3A,
	ILOpcodes_Beq				= 0x3B,
	ILOpcodes_Bge				= 0x3C,
	ILOpcodes_Bgt				= 0x3D,
	ILOpcodes_Ble				= 0x3E,
	ILOpcodes_Blt				= 0x3F,
	ILOpcodes_Bne_Un			= 0x40,
	ILOpcodes_Bge_Un			= 0x41,
	ILOpcodes_Bgt_Un			= 0x42,
	ILOpcodes_Ble_Un			= 0x43,
	ILOpcodes_Blt_Un			= 0x44,
	ILOpcodes_Switch			= 0x45,
	ILOpcodes_LdInd_I1			= 0x46,
	ILOpcodes_LdInd_U1			= 0x47,
	ILOpcodes_LdInd_I2			= 0x48,
	ILOpcodes_LdInd_U2			= 0x49,
	ILOpcodes_LdInd_I4			= 0x4A,
	ILOpcodes_LdInd_U4			= 0x4B,
	ILOpcodes_LdInd_I8			= 0x4C,
	ILOpcodes_LdInd_I			= 0x4D,
	ILOpcodes_LdInd_R4			= 0x4E,
	ILOpcodes_LdInd_R8			= 0x4F,
	ILOpcodes_LdInd_Ref			= 0x50,
	ILOpcodes_StInd_Ref			= 0x51,
	ILOpcodes_StInd_I1			= 0x52,
	ILOpcodes_StInd_I2			= 0x53,
	ILOpcodes_StInd_I4			= 0x54,
	ILOpcodes_StInd_I8			= 0x55,
	ILOpcodes_StInd_R4			= 0x56,
	ILOpcodes_StInd_R8			= 0x57,
	ILOpcodes_Add				= 0x58,
	ILOpcodes_Sub				= 0x59,
	ILOpcodes_Mul				= 0x5A,
	ILOpcodes_Div				= 0x5B,
	ILOpcodes_Div_Un			= 0x5C,
	ILOpcodes_Rem				= 0x5D,
	ILOpcodes_Rem_Un			= 0x5E,
	ILOpcodes_And				= 0x5F,
	ILOpcodes_Or				= 0x60,
	ILOpcodes_Xor				= 0x61,
	ILOpcodes_Shl				= 0x62,
	ILOpcodes_Shr				= 0x63,
	ILOpcodes_Shr_Un			= 0x64,
	ILOpcodes_Neg				= 0x65,
	ILOpcodes_Not				= 0x66,
	ILOpcodes_Conv_I1			= 0x67,
	ILOpcodes_Conv_I2			= 0x68,
	ILOpcodes_Conv_I4			= 0x69,
	ILOpcodes_Conv_I8			= 0x6A,
	ILOpcodes_Conv_R4			= 0x6B,
	ILOpcodes_Conv_R8			= 0x6C,
	ILOpcodes_Conv_U4			= 0x6D,
	ILOpcodes_Conv_U8			= 0x6E,
	ILOpcodes_CallVirt			= 0x6F,
	ILOpcodes_CpObj				= 0x70,
	ILOpcodes_LdObj				= 0x71,
	ILOpcodes_LdStr				= 0x72,
	ILOpcodes_NewObj			= 0x73,
	ILOpcodes_CastClass			= 0x74,
	ILOpcodes_IsInst			= 0x75,
	ILOpcodes_Conv_R_Un			= 0x76,
	// N/A						= 0x77,
	// N/A						= 0x78,
	ILOpcodes_UnBox				= 0x79,
	ILOpcodes_Throw				= 0x7A,
	ILOpcodes_LdFld				= 0x7B,
	ILOpcodes_LdFldA			= 0x7C,
	ILOpcodes_StFld				= 0x7D,
	ILOpcodes_LdSFld			= 0x7E,
	ILOpcodes_LdSFldA			= 0x7F,
	ILOpcodes_StSFld			= 0x80,
	ILOpcodes_StObj				= 0x81,
	ILOpcodes_Conv_Ovf_I1_Un	= 0x82,
	ILOpcodes_Conv_Ovf_I2_Un	= 0x83,
	ILOpcodes_Conv_Ovf_I4_Un	= 0x84,
	ILOpcodes_Conv_Ovf_I8_Un	= 0x85,
	ILOpcodes_Conv_Ovf_U1_Un	= 0x86,
	ILOpcodes_Conv_Ovf_U2_Un	= 0x87,
	ILOpcodes_Conv_Ovf_U4_Un	= 0x88,
	ILOpcodes_Conv_Ovf_U8_Un	= 0x89,
	ILOpcodes_Conv_Ovf_I_Un		= 0x8A,
	ILOpcodes_Conv_Ovf_U_Un		= 0x8B,
	ILOpcodes_Box				= 0x8C,
	ILOpcodes_NewArr			= 0x8D,
	ILOpcodes_LdLen				= 0x8E,
	ILOpcodes_LdElemA			= 0x8F,
	ILOpcodes_LdElem_I1			= 0x90,
	ILOpcodes_LdElem_U1			= 0x91,
	ILOpcodes_LdElem_I2			= 0x92,
	ILOpcodes_LdElem_U2			= 0x93,
	ILOpcodes_LdElem_I4			= 0x94,
	ILOpcodes_LdElem_U4			= 0x95,
	ILOpcodes_LdElem_I8			= 0x96,
	ILOpcodes_LdElem_I			= 0x97,
	ILOpcodes_LdElem_R4			= 0x98,
	ILOpcodes_LdElem_R8			= 0x99,
	ILOpcodes_LdElem_Ref		= 0x9A,
	ILOpcodes_StElem_I			= 0x9B,
	ILOpcodes_StElem_I1			= 0x9C,
	ILOpcodes_StElem_I2			= 0x9D,
	ILOpcodes_StElem_I4			= 0x9E,
	ILOpcodes_StElem_I8			= 0x9F,
	ILOpcodes_StElem_R4			= 0xA0,
	ILOpcodes_StElem_R8			= 0xA1,
	ILOpcodes_StElem_Ref		= 0xA2,
	ILOpcodes_LdElem			= 0xA3,
	ILOpcodes_StElem			= 0xA4,
	ILOpcodes_Unbox_Any			= 0xA5,
	// N/A						= 0xA6,
	// N/A						= 0xA7,
	// N/A						= 0xA8,
	// N/A						= 0xA9,
	// N/A						= 0xAA,
	// N/A						= 0xAB,
	// N/A						= 0xAC,
	// N/A						= 0xAD,
	// N/A						= 0xAE,
	// N/A						= 0xAF,
	// N/A						= 0xB0,
	// N/A						= 0xB1,
	// N/A						= 0xB2,
	ILOpcodes_Conv_Ovf_I1		= 0xB3,
	ILOpcodes_Conv_Ovf_U1		= 0xB4,
	ILOpcodes_Conv_Ovf_I2		= 0xB5,
	ILOpcodes_Conv_Ovf_U2		= 0xB6,
	ILOpcodes_Conv_Ovf_I4		= 0xB7,
	ILOpcodes_Conv_Ovf_U4		= 0xB8,
	ILOpcodes_Conv_Ovf_I8		= 0xB9,
	ILOpcodes_Conv_Ovf_U8		= 0xBA,
	// N/A						= 0xBB,
	// N/A						= 0xBC,
	// N/A						= 0xBD,
	// N/A						= 0xBE,
	// N/A						= 0xBF,
	// N/A						= 0xC0,
	// N/A						= 0xC1,
	ILOpcodes_RefAnyVal			= 0xC2,
	ILOpcodes_CkFinite			= 0xC3,
	// N/A						= 0xC4,
	// N/A						= 0xC5,
	ILOpcodes_MkRefAny			= 0xC6,
	// N/A						= 0xC7,
	// N/A						= 0xC8,
	// N/A						= 0xC9,
	// N/A						= 0xCA,
	// N/A						= 0xCB,
	// N/A						= 0xCC,
	// N/A						= 0xCD,
	// N/A						= 0xCE,
	// N/A						= 0xCF,
	ILOpcodes_LdToken			= 0xD0,
	ILOpcodes_Conv_U2			= 0xD1,
	ILOpcodes_Conv_U1			= 0xD2,
	ILOpcodes_Conv_I			= 0xD3,
	ILOpcodes_Conv_Ovf_I		= 0xD4,
	ILOpcodes_Conv_Ovf_U		= 0xD5,
	ILOpcodes_Add_Ovf			= 0xD6,
	ILOpcodes_Add_Ovf_Un		= 0xD7,
	ILOpcodes_Mul_Ovf			= 0xD8,
	ILOpcodes_Mul_Ovf_Un		= 0xD9,
	ILOpcodes_Sub_Ovf			= 0xDA,
	ILOpcodes_Sub_Ovf_Un		= 0xDB,
	ILOpcodes_EndFinally		= 0xDC,
	ILOpcodes_Leave				= 0xDD,
	ILOpcodes_Leave_S			= 0xDE,
	ILOpcodes_StInd_I			= 0xDF,
	ILOpcodes_Conv_U			= 0xE0,
	// N/A						= 0xE1,
	// N/A						= 0xE2,
	// N/A						= 0xE3,
	// N/A						= 0xE4,
	// N/A						= 0xE5,
	// N/A						= 0xE6,
	// N/A						= 0xE7,
	// N/A						= 0xE8,
	// N/A						= 0xE9,
	// N/A						= 0xEA,
	// N/A						= 0xEB,
	// N/A						= 0xEC,
	// N/A						= 0xED,
	// N/A						= 0xEE,
	// N/A						= 0xEF,
	// N/A						= 0xF0,
	// N/A						= 0xF1,
	// N/A						= 0xF2,
	// N/A						= 0xF3,
	// N/A						= 0xF4,
	// N/A						= 0xF5,
	// N/A						= 0xF6,
	// N/A						= 0xF7,
	// N/A						= 0xF8,
	// N/A						= 0xF9,
	// N/A						= 0xFA,
	// N/A						= 0xFB,
	// N/A						= 0xFC,
	// N/A						= 0xFD,
	ILOpcodes_Extended			= 0xFE,
	// N/A						= 0xFF,
} ILOpcodes; // 191 op-codes


typedef enum ILOpcodes_Extended
{
	ILOpcodes_Extended_ArgList			= 0x00,
	ILOpcodes_Extended_Ceq				= 0x01,
	ILOpcodes_Extended_Cgt				= 0x02,
	ILOpcodes_Extended_Cgt_Un			= 0x03,
	ILOpcodes_Extended_Clt				= 0x04,
	ILOpcodes_Extended_Clt_Un			= 0x05,
	ILOpcodes_Extended_LdFtn			= 0x06,
	ILOpcodes_Extended_LdVirtFtn		= 0x07,
	// N/A								= 0x08,
	ILOpcodes_Extended_LdArg			= 0x09,
	ILOpcodes_Extended_LdArgA			= 0x0A,
	ILOpcodes_Extended_StArg			= 0x0B,
	ILOpcodes_Extended_LdLoc			= 0x0C,
	ILOpcodes_Extended_LdLocA			= 0x0D,
	ILOpcodes_Extended_StLoc			= 0x0E,
	ILOpcodes_Extended_LocAlloc			= 0x0F,
	// N/A								= 0x10,
	ILOpcodes_Extended_EndFilter		= 0x11,
	ILOpcodes_Extended_Unaligned__		= 0x12,
	ILOpcodes_Extended_Volatile__		= 0x13,
	ILOpcodes_Extended_Tail__			= 0x14,
	ILOpcodes_Extended_InitObj			= 0x15,
	ILOpcodes_Extended_Constrained__	= 0x16,
	ILOpcodes_Extended_CpBlk			= 0x17,
	ILOpcodes_Extended_InitBlk			= 0x18,
	ILOpcodes_Extended_No__				= 0x19,
	ILOpcodes_Extended_ReThrow			= 0x1A,
	// N/A								= 0x1B,
	ILOpcodes_Extended_SizeOf			= 0x1C,
	ILOpcodes_Extended_RefAnyType		= 0x1D,
	ILOpcodes_Extended_ReadOnly__		= 0x1E,
} ILOpcodess_Extended; // 28 OpCodes
